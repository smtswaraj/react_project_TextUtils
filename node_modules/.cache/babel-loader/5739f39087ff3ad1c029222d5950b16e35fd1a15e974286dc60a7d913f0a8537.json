{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function TextForm(props){const handleUpClick=()=>{// console.log(\"Uppercase was clicked\" + text);\nlet newText=text.toUpperCase();setText(newText);props.showAlert('Converted to uppercase!','success');};const handleLoClick=()=>{// console.log(\"Uppercase was clicked\" + text);\nlet newText=text.toLowerCase();setText(newText);props.showAlert('Converted to lowercase!','success');};const handleClearClick=()=>{// console.log(\"Uppercase was clicked\" + text);\nlet newText=\"\";setText(newText);props.showAlert('clearing.......!','success');};const handleOnchange=event=>{// console.log(\"On change\");\nsetText(event.target.value);};const[text,setText]=useState('');return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:{backgroundColor:props.mode==='light'?'white':'#042743',color:props.mode==='light'?'black':'white'},children:[/*#__PURE__*/_jsx(\"h2\",{children:props.heading}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",value:text,onChange:handleOnchange,style:{backgroundColor:props.mode==='light'?'white':'gray',color:props.mode==='light'?'black':'white',cursor:'pointer'},id:\"myBox\",rows:\"8\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleUpClick,children:\"Convert to Uppercase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success mx-3\",onClick:handleLoClick,children:\"Convert to Lowercase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success \",onClick:handleClearClick,children:\"Clear Text\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container my-3\",style:{backgroundColor:props.mode==='light'?'white':'#042743',color:props.mode==='light'?'black':'white'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your text summary\"}),/*#__PURE__*/_jsxs(\"p\",{children:[text.split(\" \").length,\" words \",text.length,\" characters\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[0.008*text.split(\" \").length,\" Minutes read\"]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Preview\"}),/*#__PURE__*/_jsx(\"p\",{children:text.length>0?text:\"Enter something in the textbox above to preview it here\"})]})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleLoClick","toLowerCase","handleClearClick","handleOnchange","event","target","value","children","className","style","backgroundColor","mode","color","heading","onChange","cursor","id","rows","onClick","split","length"],"sources":["/Users/swarajnayak/Desktop/Natlov/react_project/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick = () => {\n        // console.log(\"Uppercase was clicked\" + text);\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert('Converted to uppercase!', 'success')\n\n    }\n    const handleLoClick = () => {\n        // console.log(\"Uppercase was clicked\" + text);\n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert('Converted to lowercase!', 'success')\n\n    }\n    const handleClearClick = () => {\n        // console.log(\"Uppercase was clicked\" + text);\n        let newText = \"\"\n        setText(newText)\n        props.showAlert('clearing.......!', 'success')\n\n    }\n\n    const handleOnchange = (event) => {\n        // console.log(\"On change\");\n        setText(event.target.value)\n    }\n\n    const [text, setText] = useState('');\n\n    return (\n        <>\n            <div className='container' style={{backgroundColor: props.mode === 'light'?'white':'#042743',color:props.mode === 'light'?'black':'white'}}>\n                <h2>{props.heading}</h2>\n                <div className=\"mb-3\">\n                    {/* <label htmlfor=\"exampleFormControlTextarea1\" className=\"form-label\">Example textarea</label> */}\n                    <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor: props.mode === 'light'?'white':'gray',color:props.mode === 'light'?'black':'white',cursor:'pointer'}} id=\"myBox\" rows=\"8\"></textarea>\n                </div>\n                <button className=\"btn btn-primary\" onClick={handleUpClick} >Convert to Uppercase</button>\n                <button className=\"btn btn-success mx-3\" onClick={handleLoClick} >Convert to Lowercase</button>\n                <button className=\"btn btn-success \" onClick={handleClearClick} >Clear Text</button>\n            </div>\n            <div className='container my-3' style={{backgroundColor: props.mode === 'light'?'white':'#042743',color:props.mode === 'light'?'black':'white'}}>\n                <h2>Your text summary</h2>\n                <p>{text.split(\" \").length} words {text.length} characters</p>\n                <p>{0.008 * text.split(\" \").length} Minutes read</p>\n                <h2>Preview</h2>\n                <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\n            </div>\n        </>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}