{"ast":null,"code":"var _jsxFileName = \"/Users/swarajnayak/Desktop/Natlov/react_project/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// let name = \"swaraj Nayak\"\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(()=>{\n      //   document.title = 'TextUtils is Amazing Mode'\n      // },2000);\n      // setInterval(()=>{\n      //   document.title = 'Install TextUtils now'\n      // },1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        aboutText: \"About\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/nav\",\n          element: /*#__PURE__*/_jsxDEV(Navbar, {\n            title: \"TextUtils\",\n            aboutText: \"About\",\n            mode: mode,\n            toggleMode: toggleMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/text\",\n          element: /*#__PURE__*/_jsxDEV(TextForm, {\n            heading: \"Enter the text to analyze\",\n            mode: mode,\n            showAlert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","About","Alert","useState","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","path","element","heading","_c","$RefreshReg$"],"sources":["/Users/swarajnayak/Desktop/Natlov/react_project/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\n// let name = \"swaraj Nayak\"\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Dark Mode\"\n      // setInterval(()=>{\n      //   document.title = 'TextUtils is Amazing Mode'\n      // },2000);\n      // setInterval(()=>{\n      //   document.title = 'Install TextUtils now'\n      // },1500);\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Light Mode\"\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Navbar/> */}\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} /> */}\n      {/* <Alert alert={alert} /> */}\n      {/* <TextForm heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert} /> */}\n      {/* <About/> */}\n      <Router>\n        <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <Routes>\n          <Route path=\"/nav\" element={\n            <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n          } />\n          <Route path=\"/text\" element={\n            <TextForm heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert} />\n          } />\n          <Route path=\"/about\" element={\n            <About />\n          } />\n        </Routes>\n      </Router>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}